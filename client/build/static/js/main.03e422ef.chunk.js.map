{"version":3,"sources":["redux/reducers/auth.js","redux/reducers/laptop.js","redux/reducers/cart.js","redux/reducers/rootReducer.js","redux/actions/actionTypes.js","redux/actions/auth.js","ui/SectionHeader/SectionHeader.js","pages/AddLaptop/AddLaptop.js","hooks/useMessage.js","components/Form/Form.js","pages/Auth/Auth.js","pages/Cart/Cart.js","pages/Home/Home.js","components/LaptopCard/LaptopCard.js","redux/actions/cart.js","pages/Laptops/Laptops.js","redux/actions/laptop.js","pages/Profile/Profile.js","components/Navbar/Navbar.js","pages/LatptopDetails/LaptopDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","token","formMessage","loading","error","laptops","errorMessage","itemsCount","items","combineReducers","auth","state","action","type","message","laptop","cart","push","item","email","password","isLogin","dispatch","a","config","headers","method","body","JSON","stringify","url","fetch","response","json","data","ok","Error","localStorage","setItem","authLogin","authError","logout","userToken","getItem","removeItem","Authorization","SectionHeader","title","className","AddLaptop","useMessage","notify","useCallback","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Form","useState","showPass","setShowPass","useDispatch","useSelector","useEffect","initialValues","onSubmit","values","isSignup","validationSchema","Yup","shape","required","min","props","touched","errors","handleChange","handleBlur","handleSubmit","setFieldValue","e","preventDefault","icon","id","onChange","onBlur","name","placeholder","onClick","disabled","Auth","Cart","Home","LaptopCard","history","useHistory","xs","md","lg","_id","src","img","alt","description","price","stopPropagation","Laptops","map","key","Profile","Navbar","collapse","setCollapse","cartItemsCount","onLinkClick","window","matchMedia","matches","document","querySelector","checked","dark","expand","to","color","isOpen","navbar","left","exact","right","LaptopDetails","App","isAuthenticated","path","component","Boolean","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.03e422ef.chunk.js","sourcesContent":["import { AUTH_LOADING, AUTH_SIGNUP, AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CLEAR_MESSAGE } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\ttoken: null,\r\n\tformMessage: \"\",\r\n\tloading: false,\r\n\terror: false\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: false,\r\n\t\t\t\tformMessage: \"\"\r\n\t\t\t};\r\n\t\tcase AUTH_SIGNUP:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tformMessage: action.message\r\n\t\t\t};\r\n\t\tcase AUTH_LOGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token,\r\n\t\t\t\tformMessage: \"Здравствуйте, Вы вошли в систему!\"\r\n\t\t\t};\r\n\t\tcase AUTH_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: true,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tformMessage: action.errorMessage\r\n\t\t\t};\r\n\t\tcase AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tformMessage: \"\"\r\n\t\t\t};\r\n\t\tcase AUTH_CLEAR_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMessage: \"\"\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { LAPTOP_ERROR, LAPTOP_LOADING, LAPTOP_FETCH } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\tlaptops: [],\r\n\tloading: false,\r\n\terror: false,\r\n\terrorMessage: \"\"\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase LAPTOP_FETCH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tlaptops: action.laptops\r\n\t\t\t};\r\n\t\tcase LAPTOP_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror: false\r\n\t\t\t};\r\n\t\tcase LAPTOP_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: true,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terrorMessage: action.errorMessage\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { CART_ADD } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\titemsCount: 0,\r\n\titems: []\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase CART_ADD:\r\n\t\t\tlet itemsCount = state.itemsCount;\r\n\t\t\titemsCount += 1;\r\n\t\t\tlet items = [...state.items];\r\n\t\t\titems.push(action.item);\r\n\t\t\treturn { ...state, itemsCount, items };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth\";\r\nimport laptopReducer from \"./laptop\";\r\nimport cartReducer from \"./cart\";\r\n\r\nexport default combineReducers({\r\n\tauth: authReducer,\r\n\tlaptop: laptopReducer,\r\n\tcart: cartReducer\r\n});\r\n","// Auth\r\nexport const AUTH_SIGNUP = \"AUTH_SIGNUP\";\r\nexport const AUTH_LOGIN = \"AUTH_LOGIN\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\nexport const AUTH_CLEAR_MESSAGE = \"AUTH_CLEAR_MESSAGE\";\r\n\r\n// Laptop\r\nexport const LAPTOP_LOADING = \"LAPTOP_LOADING\";\r\nexport const LAPTOP_ERROR = \"LAPTOP_ERROR\";\r\nexport const LAPTOP_FETCH = \"LAPTOP_FETCH\";\r\n\r\n// Cart\r\nexport const CART_ADD = \"CART_ADD\";\r\n","import { AUTH_LOADING, AUTH_SIGNUP, AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CLEAR_MESSAGE } from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n\treturn async dispatch => {\r\n\t\tdispatch(authLoading());\r\n\t\tconst config = {\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify({ email, password })\r\n\t\t};\r\n\t\tlet url = \"/api/auth/login\";\r\n\r\n\t\ttry {\r\n\t\t\tif (isLogin) {\r\n\t\t\t\tconst response = await fetch(url, config);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(data.message);\r\n\t\t\t\t}\r\n\t\t\t\tlocalStorage.setItem(\"token\", data.token);\r\n\t\t\t\tdispatch(authLogin(data.token));\r\n\t\t\t} else {\r\n\t\t\t\turl = \"/api/auth/signup\";\r\n\t\t\t\tconst response = await fetch(url, config);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(data.message);\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(authSignup(data.message));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(authError(error.message));\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function clearMessage() {\r\n\treturn {\r\n\t\ttype: AUTH_CLEAR_MESSAGE\r\n\t};\r\n}\r\n\r\nexport function authLoading() {\r\n\treturn {\r\n\t\ttype: AUTH_LOADING\r\n\t};\r\n}\r\n\r\nexport function authLogin(token) {\r\n\treturn {\r\n\t\ttype: AUTH_LOGIN,\r\n\t\ttoken\r\n\t};\r\n}\r\n\r\nexport function authSignup(message) {\r\n\treturn {\r\n\t\ttype: AUTH_SIGNUP,\r\n\t\tmessage\r\n\t};\r\n}\r\n\r\nexport function authError(errorMessage) {\r\n\treturn {\r\n\t\ttype: AUTH_ERROR,\r\n\t\terrorMessage\r\n\t};\r\n}\r\n\r\n// export function autoLogout(time) {\r\n// \treturn async dispatch => {\r\n// \t\tsetTimeout(() => dispatch(logout()), time * 1000 * 24);\r\n// \t};\r\n// }\r\n\r\nexport function logout(token) {\r\n\treturn async dispatch => {\r\n\t\tconst userToken = token || localStorage.getItem(\"token\");\r\n\t\tlocalStorage.removeItem(\"token\");\r\n\t\tdispatch({ type: AUTH_LOGOUT });\r\n\r\n\t\tif (userToken) {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: { Authorization: `Bearer ${userToken}` },\r\n\t\t\t\tmethod: \"POST\"\r\n\t\t\t};\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(\"/api/auth/logout\", config);\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(\"Что-то пошло не так\");\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tdispatch(authError(e.message));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function autoLogin() {\r\n\treturn dispatch => {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tif (!token) {\r\n\t\t\tdispatch(logout(token));\r\n\t\t} else {\r\n\t\t\tdispatch(authLogin(token));\r\n\t\t}\r\n\t};\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./SectionHeader.scss\";\r\n\r\nconst SectionHeader = ({ title }) => {\r\n\treturn <h2 className=\"section-header\">{title}</h2>;\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React from \"react\";\r\nimport SectionHeader from \"../../ui/SectionHeader/SectionHeader\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nimport \"./AddLaptop.scss\";\r\n\r\nconst AddLaptop = () => {\r\n\treturn (\r\n\t\t<section className=\"add-laptop\">\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<SectionHeader title=\"Добавить ноутбук\" />\r\n\t\t\t\t<p>Здесь будет форма добавления</p>\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default AddLaptop;\r\n","import { useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const useMessage = message => {\r\n\tconst notify = useCallback(\r\n\t\t() =>\r\n\t\t\ttoast(message, {\r\n\t\t\t\tposition: \"top-right\",\r\n\t\t\t\tautoClose: 3000,\r\n\t\t\t\thideProgressBar: true,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true\r\n\t\t\t}),\r\n\t\t[message]\r\n\t);\r\n\r\n\treturn { notify };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { auth } from \"../../redux/actions/auth\";\r\nimport { useMessage } from \"../../hooks/useMessage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport \"./Form.scss\";\r\n\r\nconst Form = () => {\r\n\tconst [showPass, setShowPass] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\tconst error = useSelector(state => state.auth.error);\r\n\tconst loading = useSelector(state => state.auth.loading);\r\n\tconst formMessage = useSelector(state => state.auth.formMessage);\r\n\tconst { notify } = useMessage(formMessage);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (formMessage) {\r\n\t\t\tnotify();\r\n\t\t}\r\n\t}, [formMessage, notify]);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ email: \"\", password: \"\" }}\r\n\t\t\tonSubmit={values => {\r\n\t\t\t\tif (values.isSignup) {\r\n\t\t\t\t\tdispatch(auth(values.email, values.password, false));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch(auth(values.email, values.password, true));\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\temail: Yup.string()\r\n\t\t\t\t\t.email(\"Введите корректный email\")\r\n\t\t\t\t\t.required(\"Это поле обязательно\"),\r\n\t\t\t\tpassword: Yup.string()\r\n\t\t\t\t\t.required(\"Это поле обязательно\")\r\n\t\t\t\t\t.min(6, \"Должно быть не меньше 6 символов\")\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{props => {\r\n\t\t\t\tconst { touched, errors, handleChange, handleBlur, handleSubmit, setFieldValue } = props;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<form className=\"auth__form form\" onSubmit={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<div className=\"form__logo\"></div>\r\n\t\t\t\t\t\t<div className=\"form__text form__title\">Онлайн магазин</div>\r\n\t\t\t\t\t\t<div className=\"form__text form__subtitle\">BETA</div>\r\n\t\t\t\t\t\t<div className=\"form__fields\">\r\n\t\t\t\t\t\t\t<div className=\"form__field\">\r\n\t\t\t\t\t\t\t\t<MDBIcon className=\"form__icon\" icon=\"envelope\" />\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"form__input\"\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Ваш email\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{errors.email && touched.email ? <div className=\"form__text form__error-message\">{errors.email}</div> : null}\r\n\r\n\t\t\t\t\t\t\t<div className=\"form__field\">\r\n\t\t\t\t\t\t\t\t<MDBIcon className=\"form__icon\" icon=\"unlock\" />\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"form__input\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\ttype={showPass ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Пароль\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{showPass ? (\r\n\t\t\t\t\t\t\t\t\t<MDBIcon className=\"form__toggle-password \" icon=\"eye\" onClick={() => setShowPass(!showPass)} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<MDBIcon className=\"form__toggle-password \" icon=\"eye-slash\" onClick={() => setShowPass(!showPass)} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{errors.password && touched.password ? <div className=\"form__text form__error-message\">{errors.password}</div> : null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{error ? (\r\n\t\t\t\t\t\t\t<div className=\"form__text form__error-message\">{formMessage}</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"form__text form__success-message\">{formMessage}</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"form__btn\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\tsetFieldValue(\"isSignup\", false);\r\n\t\t\t\t\t\t\t\thandleSubmit(e);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tВойти\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div className=\"form__signup form__text\">\r\n\t\t\t\t\t\t\tНет аккаунта?{\" \"}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"form__btn-reg\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\tsetFieldValue(\"isSignup\", true);\r\n\t\t\t\t\t\t\t\t\thandleSubmit(e);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tЗарегистрируйтесь\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ToastContainer />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport Form from \"../../components/Form/Form\"\r\n\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => {\r\n\treturn (\r\n\t\t<section className=\"auth\">\r\n\t\t\t<MDBContainer className=\"d-flex justify-content-center\">\r\n\t\t\t\t<Form/>\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport SectionHeader from \"../../ui/SectionHeader/SectionHeader\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nimport \"./Cart.scss\";\r\n\r\nconst Cart = () => {\r\n\treturn (\r\n\t\t<section className=\"cart\">\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<SectionHeader title=\"Корзина\" />\r\n\t\t\t\t<p>Здесь будут добавленные товары</p>\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useEffect } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useMessage } from \"../../hooks/useMessage\";\r\nimport { clearMessage } from \"../../redux/actions/auth\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport SectionHeader from \"../../ui/SectionHeader/SectionHeader\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n\tconst formMessage = useSelector(state => state.auth.formMessage);\r\n\tconst { notify } = useMessage(formMessage);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (formMessage) {\r\n\t\t\tnotify();\r\n\t\t}\r\n\r\n\t\treturn () => dispatch(clearMessage());\r\n\t}, [notify, dispatch, formMessage]);\r\n\r\n\treturn (\r\n\t\t<section className=\"home\">\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<SectionHeader title=\"Главная страница\" />\r\n\t\t\t\t<p>Перейдите на страницу \"Ноутбуки\". Там можно взаимодействовать с карточками</p>\r\n\t\t\t\t<ToastContainer />\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MDBCol, MDBIcon } from \"mdbreact\";\r\nimport { addItem } from \"../../redux/actions/cart\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useMessage } from \"../../hooks/useMessage\";\r\n\r\nimport \"./LaptopCard.scss\";\r\n\r\nconst LaptopCard = ({ laptop }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst { notify } = useMessage(\"Ноутбук добавлен в корзину! Перейдите туда, чтобы посмотреть \");\r\n\r\n\tconst addToCartHandler = e => {\r\n\t\te.stopPropagation();\r\n\t\tnotify();\r\n\t\tdispatch(addItem(laptop));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MDBCol xs=\"12\" md=\"6\" lg=\"4\" className=\"laptop-card\" onClick={() => history.push(\"/laptops/\" + laptop._id)}>\r\n\t\t\t<ToastContainer />\r\n\t\t\t<img className=\"laptop-card__img\" src={laptop.img} alt=\"preview\" />\r\n\t\t\t<div className=\"laptop-card__description\">{laptop.description}</div>\r\n\t\t\t<div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n\t\t\t\t<div className=\"laptop-card__price\">{laptop.price}</div>\r\n\t\t\t\t<MDBIcon icon=\"shopping-cart\" className=\"laptop-card__add\" onClick={addToCartHandler} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"laptop-card__presence\">Есть в наличии</div>\r\n\t\t</MDBCol>\r\n\t);\r\n};\r\n\r\nexport default LaptopCard;\r\n","import { CART_ADD } from \"../actions/actionTypes\";\r\n\r\nexport function addItem(item) {\r\n\treturn {\r\n\t\ttype: CART_ADD,\r\n\t\titem\r\n\t};\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MDBContainer, MDBRow } from \"mdbreact\";\r\nimport { fetchLaptops } from \"../../redux/actions/laptop\";\r\nimport SectionHeader from \"../../ui/SectionHeader/SectionHeader\";\r\nimport LaptopCard from \"../../components/LaptopCard/LaptopCard\";\r\n\r\nimport \"./Laptops.scss\";\r\n\r\nconst Laptops = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst laptops = useSelector(state => state.laptop.laptops);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchLaptops());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<section className=\"laptops\">\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<SectionHeader title=\"Ноутбуки\" />\r\n\t\t\t\t<MDBRow className=\"laptops__list\">\r\n\t\t\t\t\t{laptops.map(laptop => (\r\n\t\t\t\t\t\t<LaptopCard key={laptop._id} laptop={laptop} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</MDBRow>\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Laptops;\r\n","import { LAPTOP_ERROR, LAPTOP_LOADING, LAPTOP_FETCH } from \"../actions/actionTypes\";\r\n\r\nexport function fetchLaptops() {\r\n\treturn async dispatch => {\r\n\t\tdispatch(laptopLoading());\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tconst config = {\r\n\t\t\theaders: { Authorization: `Bearer ${token}` },\r\n\t\t\tmethod: \"GET\"\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"/api/laptops/\", config);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(data.message);\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(laptopFetch(data));\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(laptopError(error.message));\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function laptopLoading() {\r\n\treturn {\r\n\t\ttype: LAPTOP_LOADING\r\n\t};\r\n}\r\n\r\nexport function laptopError(errorMessage) {\r\n\treturn {\r\n\t\ttype: LAPTOP_ERROR,\r\n\t\terrorMessage\r\n\t};\r\n}\r\n\r\nexport function laptopFetch(laptops) {\r\n\treturn {\r\n\t\ttype: LAPTOP_FETCH,\r\n\t\tlaptops\r\n\t};\r\n}\r\n","import React from \"react\";\r\nimport SectionHeader from \"../../ui/SectionHeader/SectionHeader\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nimport \"./Profile.scss\";\r\n\r\nconst Profile = () => {\r\n\treturn (\r\n\t\t<section className=\"profile\">\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<SectionHeader title=\"Мой профиль\" />\r\n\t\t\t\t<p>Здесь будут настройки и сведения о профиле</p>\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { MDBNavbar, MDBIcon, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBCollapse, MDBHamburgerToggler } from \"mdbreact\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./Navbar.scss\";\r\n\r\nconst Navbar = () => {\r\n\tconst [collapse, setCollapse] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\tconst cartItemsCount = useSelector(state => state.cart.itemsCount);\r\n\r\n\tconst onLinkClick = () => {\r\n\t\tconst isSmallScreen = window.matchMedia(\"(max-width: 768px)\").matches;\r\n\r\n\t\tif (isSmallScreen) {\r\n\t\t\tdocument.querySelector(\"#hamburger\").checked = !collapse;\r\n\t\t\tsetCollapse(!collapse);\r\n\t\t}\r\n\t};\r\n\r\n\tconst toggleSingleCollapse = () => {\r\n\t\tsetCollapse(!collapse);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MDBNavbar dark expand=\"md\">\r\n\t\t\t<MDBNavLink to=\"/\" className=\"navbar-brand\">\r\n\t\t\t\tROZETKA\r\n\t\t\t</MDBNavLink>\r\n\r\n\t\t\t<MDBHamburgerToggler className=\"d-inline d-md-none\" color=\"#fff\" id=\"hamburger\" onClick={toggleSingleCollapse} />\r\n\t\t\t<MDBCollapse isOpen={collapse} navbar>\r\n\t\t\t\t<MDBNavbarNav left>\r\n\t\t\t\t\t<MDBNavItem>\r\n\t\t\t\t\t\t<MDBNavLink to=\"/laptops\" exact onClick={onLinkClick}>\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"laptop\" className=\"mr-1\" />\r\n\t\t\t\t\t\t\tНоутбуки\r\n\t\t\t\t\t\t</MDBNavLink>\r\n\t\t\t\t\t</MDBNavItem>\r\n\t\t\t\t\t<MDBNavItem>\r\n\t\t\t\t\t\t<MDBNavLink to=\"/add\" exact onClick={onLinkClick}>\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"plus-circle\" className=\"mr-1\" />\r\n\t\t\t\t\t\t\tДобавить товар\r\n\t\t\t\t\t\t</MDBNavLink>\r\n\t\t\t\t\t</MDBNavItem>\r\n\t\t\t\t</MDBNavbarNav>\r\n\t\t\t\t<MDBNavbarNav right>\r\n\t\t\t\t\t<MDBNavItem>\r\n\t\t\t\t\t\t<MDBNavLink to=\"/profile\" onClick={onLinkClick}>\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"user-alt\" className=\"mr-1\" />\r\n\t\t\t\t\t\t\tМой профиль\r\n\t\t\t\t\t\t</MDBNavLink>\r\n\t\t\t\t\t</MDBNavItem>\r\n\t\t\t\t\t<MDBNavItem>\r\n\t\t\t\t\t\t<MDBNavLink className=\"waves-effect waves-light d-flex align-items-center mr-3\" to=\"/cart\" onClick={onLinkClick}>\r\n\t\t\t\t\t\t\t{cartItemsCount > 0 ? <span id=\"cart-number\">{cartItemsCount}</span> : null}\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"shopping-cart\" className=\"ml-1\" />\r\n\t\t\t\t\t\t</MDBNavLink>\r\n\t\t\t\t\t</MDBNavItem>\r\n\t\t\t\t\t<MDBNavItem>\r\n\t\t\t\t\t\t<MDBNavLink to=\"/logout\" onClick={() => dispatch(logout())}>\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"sign-out-alt\" className=\"mr-1\" />\r\n\t\t\t\t\t\t\tВыйти\r\n\t\t\t\t\t\t</MDBNavLink>\r\n\t\t\t\t\t</MDBNavItem>\r\n\t\t\t\t</MDBNavbarNav>\r\n\t\t\t</MDBCollapse>\r\n\t\t</MDBNavbar>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport SectionHeader from \"../../ui/SectionHeader/SectionHeader\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nimport \"./LaptopDetails.scss\";\r\n\r\nconst LaptopDetails = () => {\r\n\treturn (\r\n\t\t<section className=\"details\">\r\n\t\t\t<MDBContainer>\r\n\t\t\t\t<SectionHeader title=\"Детальная информация\" />\r\n\t\t\t\t<p>Здесь будет детальная информация ноутбука из карточки</p>\r\n\t\t\t</MDBContainer>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default LaptopDetails;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { autoLogin } from \"./redux/actions/auth\";\nimport { Auth, Laptops, Home, Cart, AddLaptop, Profile } from \"./pages\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport LaptopDetails from \"./pages/LatptopDetails/LaptopDetails\";\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\tconst isAuthenticated = useSelector(state => state.auth.token);\n\n\tuseEffect(() => {\n\t\tdispatch(autoLogin());\n\t});\n\n\tif (isAuthenticated) {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t{isAuthenticated && <Navbar />}\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/laptops\" exact component={Laptops} />\n\t\t\t\t\t<Route path=\"/laptops/:id\" component={LaptopDetails} />\n\t\t\t\t\t<Route path=\"/cart\" component={Cart} />\n\t\t\t\t\t<Route path=\"/add\" component={AddLaptop} />\n\t\t\t\t\t<Route path=\"/profile\" component={Profile} />\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/auth\" component={Auth} />\n\t\t\t\t<Redirect to=\"/auth\" />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst composeEnhancers =\n\ttypeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}